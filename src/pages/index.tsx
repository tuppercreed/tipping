import type { GetStaticProps, NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import { GamesResponse, getGames } from '../common/utils/games'
import { AppConfig } from '../common/utils/app.config'
import { SelectTips } from '../common/components/tipping'
import { Round } from '../common/utils/squiggle/db'
import Link from 'next/link'
import prisma from '../common/utils/prisma'
import { Prisma } from '@prisma/client'
import Auth from '../modules/supabase/components/Auth'
import Account from '../modules/supabase/components/Account'
import { useState, useEffect } from 'react'
import { supabase } from '../modules/supabase/client'
import { Session } from '@supabase/supabase-js'

export const getStaticProps: GetStaticProps = async () => {
  //const res = await fetch(`${AppConfig.aflEndpoint}?q=games;year=${new Date().getFullYear()};round=${5}`)
  //const games: GamesResponse = await res.json()
  const key = `games;year=${new Date().getFullYear().toString()};round=${5}`;
  let games = {};
  if (AppConfig.local) {
    const gameSelect: Prisma.GameSelect = {
      homeTeam: {
        select: { name: true }
      },
      awayTeam: {
        select: {
          name: true
        }
      }
    };

    const games = await prisma.game.findMany({
      where: { round: { year: new Date().getFullYear(), round: AppConfig.round } }, select: gameSelect,
    });

    return { props: { games } };
  } else {
    throw new Error('unimplemented')
  }

}

export default function Home({ games }: { games: { homeTeam: { name: string }, awayTeam: { name: string } }[] }) {
  let gamesList = games.map((game => { let simplifiedGame = { homeTeam: game.homeTeam.name, awayTeam: game.awayTeam.name }; return simplifiedGame; }));

  const [session, setSession] = useState<Session | null>(null);

  useEffect(() => {
    setSession(supabase.auth.session());
    supabase.auth.onAuthStateChange((_event, session) => {
      setSession(session)
    })
  }, [])

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <h1 className='underline'>
          AFL Tipping with <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <ol>
          {gamesList.map((game) => <li key={game.homeTeam}>{game.homeTeam} vs. {game.awayTeam}</li>)}
        </ol>

        <hr />

        <p>Auth0</p>

        <Link href='/api/auth/login'>Login</Link>
        <Link href='/api/auth/logout'>Logout</Link>

        <p>Supabase</p>

        <div className='container' style={{ padding: '50px 0 100px 0' }}>
          {!session ? <Auth /> : <Account key={session!.user!.id} session={session} />}
        </div>


        <hr />

        <SelectTips games={gamesList} />


      </main>
    </div>
  )
}

