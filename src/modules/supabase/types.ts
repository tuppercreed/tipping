/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/competition": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.competition.id"];
          competition_name?: parameters["rowFilter.competition.competition_name"];
          avatar_url?: parameters["rowFilter.competition.avatar_url"];
          website?: parameters["rowFilter.competition.website"];
          time_zone?: parameters["rowFilter.competition.time_zone"];
          created_at?: parameters["rowFilter.competition.created_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["competition"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** competition */
          competition?: definitions["competition"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.competition.id"];
          competition_name?: parameters["rowFilter.competition.competition_name"];
          avatar_url?: parameters["rowFilter.competition.avatar_url"];
          website?: parameters["rowFilter.competition.website"];
          time_zone?: parameters["rowFilter.competition.time_zone"];
          created_at?: parameters["rowFilter.competition.created_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.competition.id"];
          competition_name?: parameters["rowFilter.competition.competition_name"];
          avatar_url?: parameters["rowFilter.competition.avatar_url"];
          website?: parameters["rowFilter.competition.website"];
          time_zone?: parameters["rowFilter.competition.time_zone"];
          created_at?: parameters["rowFilter.competition.created_at"];
        };
        body: {
          /** competition */
          competition?: definitions["competition"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/competition_rankings_summary": {
    get: {
      parameters: {
        query: {
          round_year?: parameters["rowFilter.competition_rankings_summary.round_year"];
          round_number?: parameters["rowFilter.competition_rankings_summary.round_number"];
          person_id?: parameters["rowFilter.competition_rankings_summary.person_id"];
          wins?: parameters["rowFilter.competition_rankings_summary.wins"];
          updated_at?: parameters["rowFilter.competition_rankings_summary.updated_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["competition_rankings_summary"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** competition_rankings_summary */
          competition_rankings_summary?: definitions["competition_rankings_summary"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          round_year?: parameters["rowFilter.competition_rankings_summary.round_year"];
          round_number?: parameters["rowFilter.competition_rankings_summary.round_number"];
          person_id?: parameters["rowFilter.competition_rankings_summary.person_id"];
          wins?: parameters["rowFilter.competition_rankings_summary.wins"];
          updated_at?: parameters["rowFilter.competition_rankings_summary.updated_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          round_year?: parameters["rowFilter.competition_rankings_summary.round_year"];
          round_number?: parameters["rowFilter.competition_rankings_summary.round_number"];
          person_id?: parameters["rowFilter.competition_rankings_summary.person_id"];
          wins?: parameters["rowFilter.competition_rankings_summary.wins"];
          updated_at?: parameters["rowFilter.competition_rankings_summary.updated_at"];
        };
        body: {
          /** competition_rankings_summary */
          competition_rankings_summary?: definitions["competition_rankings_summary"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/competitions_persons": {
    get: {
      parameters: {
        query: {
          competition_id?: parameters["rowFilter.competitions_persons.competition_id"];
          person_id?: parameters["rowFilter.competitions_persons.person_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["competitions_persons"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** competitions_persons */
          competitions_persons?: definitions["competitions_persons"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          competition_id?: parameters["rowFilter.competitions_persons.competition_id"];
          person_id?: parameters["rowFilter.competitions_persons.person_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          competition_id?: parameters["rowFilter.competitions_persons.competition_id"];
          person_id?: parameters["rowFilter.competitions_persons.person_id"];
        };
        body: {
          /** competitions_persons */
          competitions_persons?: definitions["competitions_persons"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/game": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.game.id"];
          venue?: parameters["rowFilter.game.venue"];
          scheduled?: parameters["rowFilter.game.scheduled"];
          round_year?: parameters["rowFilter.game.round_year"];
          round_number?: parameters["rowFilter.game.round_number"];
          created_at?: parameters["rowFilter.game.created_at"];
          updated_at?: parameters["rowFilter.game.updated_at"];
          complete?: parameters["rowFilter.game.complete"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["game"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** game */
          game?: definitions["game"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.game.id"];
          venue?: parameters["rowFilter.game.venue"];
          scheduled?: parameters["rowFilter.game.scheduled"];
          round_year?: parameters["rowFilter.game.round_year"];
          round_number?: parameters["rowFilter.game.round_number"];
          created_at?: parameters["rowFilter.game.created_at"];
          updated_at?: parameters["rowFilter.game.updated_at"];
          complete?: parameters["rowFilter.game.complete"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.game.id"];
          venue?: parameters["rowFilter.game.venue"];
          scheduled?: parameters["rowFilter.game.scheduled"];
          round_year?: parameters["rowFilter.game.round_year"];
          round_number?: parameters["rowFilter.game.round_number"];
          created_at?: parameters["rowFilter.game.created_at"];
          updated_at?: parameters["rowFilter.game.updated_at"];
          complete?: parameters["rowFilter.game.complete"];
        };
        body: {
          /** game */
          game?: definitions["game"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/game_team": {
    get: {
      parameters: {
        query: {
          game_id?: parameters["rowFilter.game_team.game_id"];
          team_id?: parameters["rowFilter.game_team.team_id"];
          home?: parameters["rowFilter.game_team.home"];
          goals?: parameters["rowFilter.game_team.goals"];
          behinds?: parameters["rowFilter.game_team.behinds"];
          created_at?: parameters["rowFilter.game_team.created_at"];
          updated_at?: parameters["rowFilter.game_team.updated_at"];
          winner?: parameters["rowFilter.game_team.winner"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["game_team"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** game_team */
          game_team?: definitions["game_team"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          game_id?: parameters["rowFilter.game_team.game_id"];
          team_id?: parameters["rowFilter.game_team.team_id"];
          home?: parameters["rowFilter.game_team.home"];
          goals?: parameters["rowFilter.game_team.goals"];
          behinds?: parameters["rowFilter.game_team.behinds"];
          created_at?: parameters["rowFilter.game_team.created_at"];
          updated_at?: parameters["rowFilter.game_team.updated_at"];
          winner?: parameters["rowFilter.game_team.winner"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          game_id?: parameters["rowFilter.game_team.game_id"];
          team_id?: parameters["rowFilter.game_team.team_id"];
          home?: parameters["rowFilter.game_team.home"];
          goals?: parameters["rowFilter.game_team.goals"];
          behinds?: parameters["rowFilter.game_team.behinds"];
          created_at?: parameters["rowFilter.game_team.created_at"];
          updated_at?: parameters["rowFilter.game_team.updated_at"];
          winner?: parameters["rowFilter.game_team.winner"];
        };
        body: {
          /** game_team */
          game_team?: definitions["game_team"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/person": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.person.id"];
          username?: parameters["rowFilter.person.username"];
          avatar_url?: parameters["rowFilter.person.avatar_url"];
          website?: parameters["rowFilter.person.website"];
          created_at?: parameters["rowFilter.person.created_at"];
          updated_at?: parameters["rowFilter.person.updated_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["person"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** person */
          person?: definitions["person"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.person.id"];
          username?: parameters["rowFilter.person.username"];
          avatar_url?: parameters["rowFilter.person.avatar_url"];
          website?: parameters["rowFilter.person.website"];
          created_at?: parameters["rowFilter.person.created_at"];
          updated_at?: parameters["rowFilter.person.updated_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.person.id"];
          username?: parameters["rowFilter.person.username"];
          avatar_url?: parameters["rowFilter.person.avatar_url"];
          website?: parameters["rowFilter.person.website"];
          created_at?: parameters["rowFilter.person.created_at"];
          updated_at?: parameters["rowFilter.person.updated_at"];
        };
        body: {
          /** person */
          person?: definitions["person"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/prediction": {
    get: {
      parameters: {
        query: {
          game_id?: parameters["rowFilter.prediction.game_id"];
          team_id?: parameters["rowFilter.prediction.team_id"];
          predictor_id?: parameters["rowFilter.prediction.predictor_id"];
          win?: parameters["rowFilter.prediction.win"];
          confidence?: parameters["rowFilter.prediction.confidence"];
          created_at?: parameters["rowFilter.prediction.created_at"];
          updated_at?: parameters["rowFilter.prediction.updated_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["prediction"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** prediction */
          prediction?: definitions["prediction"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          game_id?: parameters["rowFilter.prediction.game_id"];
          team_id?: parameters["rowFilter.prediction.team_id"];
          predictor_id?: parameters["rowFilter.prediction.predictor_id"];
          win?: parameters["rowFilter.prediction.win"];
          confidence?: parameters["rowFilter.prediction.confidence"];
          created_at?: parameters["rowFilter.prediction.created_at"];
          updated_at?: parameters["rowFilter.prediction.updated_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          game_id?: parameters["rowFilter.prediction.game_id"];
          team_id?: parameters["rowFilter.prediction.team_id"];
          predictor_id?: parameters["rowFilter.prediction.predictor_id"];
          win?: parameters["rowFilter.prediction.win"];
          confidence?: parameters["rowFilter.prediction.confidence"];
          created_at?: parameters["rowFilter.prediction.created_at"];
          updated_at?: parameters["rowFilter.prediction.updated_at"];
        };
        body: {
          /** prediction */
          prediction?: definitions["prediction"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/predictor": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.predictor.id"];
          predictor_name?: parameters["rowFilter.predictor.predictor_name"];
          predictor_url?: parameters["rowFilter.predictor.predictor_url"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["predictor"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** predictor */
          predictor?: definitions["predictor"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.predictor.id"];
          predictor_name?: parameters["rowFilter.predictor.predictor_name"];
          predictor_url?: parameters["rowFilter.predictor.predictor_url"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.predictor.id"];
          predictor_name?: parameters["rowFilter.predictor.predictor_name"];
          predictor_url?: parameters["rowFilter.predictor.predictor_url"];
        };
        body: {
          /** predictor */
          predictor?: definitions["predictor"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/rank_pages": {
    get: {
      parameters: {
        query: {
          round_number?: parameters["rowFilter.rank_pages.round_number"];
          competition_id?: parameters["rowFilter.rank_pages.competition_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["rank_pages"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
  };
  "/team": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.team.id"];
          team_name?: parameters["rowFilter.team.team_name"];
          abbreviation?: parameters["rowFilter.team.abbreviation"];
          standing?: parameters["rowFilter.team.standing"];
          updated_at?: parameters["rowFilter.team.updated_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["team"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** team */
          team?: definitions["team"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.team.id"];
          team_name?: parameters["rowFilter.team.team_name"];
          abbreviation?: parameters["rowFilter.team.abbreviation"];
          standing?: parameters["rowFilter.team.standing"];
          updated_at?: parameters["rowFilter.team.updated_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.team.id"];
          team_name?: parameters["rowFilter.team.team_name"];
          abbreviation?: parameters["rowFilter.team.abbreviation"];
          standing?: parameters["rowFilter.team.standing"];
          updated_at?: parameters["rowFilter.team.updated_at"];
        };
        body: {
          /** team */
          team?: definitions["team"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/team_game": {
    get: {
      parameters: {
        query: {
          game_id?: parameters["rowFilter.team_game.game_id"];
          team_id?: parameters["rowFilter.team_game.team_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["team_game"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
  };
  "/tip": {
    get: {
      parameters: {
        query: {
          person_id?: parameters["rowFilter.tip.person_id"];
          game_id?: parameters["rowFilter.tip.game_id"];
          team_id?: parameters["rowFilter.tip.team_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["tip"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** tip */
          tip?: definitions["tip"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          person_id?: parameters["rowFilter.tip.person_id"];
          game_id?: parameters["rowFilter.tip.game_id"];
          team_id?: parameters["rowFilter.tip.team_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          person_id?: parameters["rowFilter.tip.person_id"];
          game_id?: parameters["rowFilter.tip.game_id"];
          team_id?: parameters["rowFilter.tip.team_id"];
        };
        body: {
          /** tip */
          tip?: definitions["tip"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/tournament_round": {
    get: {
      parameters: {
        query: {
          round_year?: parameters["rowFilter.tournament_round.round_year"];
          round_number?: parameters["rowFilter.tournament_round.round_number"];
          round_name?: parameters["rowFilter.tournament_round.round_name"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["tournament_round"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** tournament_round */
          tournament_round?: definitions["tournament_round"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          round_year?: parameters["rowFilter.tournament_round.round_year"];
          round_number?: parameters["rowFilter.tournament_round.round_number"];
          round_name?: parameters["rowFilter.tournament_round.round_name"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          round_year?: parameters["rowFilter.tournament_round.round_year"];
          round_number?: parameters["rowFilter.tournament_round.round_number"];
          round_name?: parameters["rowFilter.tournament_round.round_name"];
        };
        body: {
          /** tournament_round */
          tournament_round?: definitions["tournament_round"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/rpc/all_rankings": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: integer */
            r_year: number;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/calculate_score": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: public.game_team */
            side: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/round_rankings": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: integer */
            r_year: number;
            /** Format: integer */
            r_number: number;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/talk_to_kanye": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: text */
            name: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/competition_rankings": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: integer */
            comp_id: number;
            /** Format: integer */
            r_year: number;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/calculate_winner": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: public.game_team */
            away: string;
            /** Format: public.game_team */
            home: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/scores": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: integer */
            r_year: number;
            /** Format: integer */
            r_number: number;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/game_started": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: timestamp without time zone */
            scheduled: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/competition_rankings_round": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: integer */
            comp_id: number;
            /** Format: integer */
            r_year: number;
            /** Format: integer */
            r_number: number;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
}

export interface definitions {
  competition: {
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: text */
    competition_name: string;
    /** Format: text */
    avatar_url?: string;
    /** Format: text */
    website?: string;
    /** Format: text */
    time_zone?: string;
    /**
     * Format: timestamp without time zone
     * @default CURRENT_TIMESTAMP
     */
    created_at: string;
  };
  competition_rankings_summary: {
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    round_year: number;
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    round_number: number;
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `person.id`.<fk table='person' column='id'/>
     */
    person_id: string;
    /** Format: integer */
    wins?: number;
    /**
     * Format: timestamp without time zone
     * @default CURRENT_TIMESTAMP
     */
    updated_at: string;
  };
  competitions_persons: {
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `competition.id`.<fk table='competition' column='id'/>
     */
    competition_id: number;
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `person.id`.<fk table='person' column='id'/>
     */
    person_id: string;
  };
  game: {
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: text */
    venue: string;
    /** Format: timestamp without time zone */
    scheduled?: string;
    /** Format: integer */
    round_year: number;
    /** Format: integer */
    round_number: number;
    /**
     * Format: timestamp without time zone
     * @default CURRENT_TIMESTAMP
     */
    created_at: string;
    /**
     * Format: timestamp without time zone
     * @default CURRENT_TIMESTAMP
     */
    updated_at: string;
    /** Format: boolean */
    complete: boolean;
  };
  game_team: {
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `game.id`.<fk table='game' column='id'/>
     */
    game_id: number;
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `team.id`.<fk table='team' column='id'/>
     */
    team_id: number;
    /** Format: boolean */
    home: boolean;
    /** Format: integer */
    goals?: number;
    /** Format: integer */
    behinds?: number;
    /**
     * Format: timestamp without time zone
     * @default CURRENT_TIMESTAMP
     */
    created_at: string;
    /**
     * Format: timestamp without time zone
     * @default CURRENT_TIMESTAMP
     */
    updated_at: string;
    /** Format: boolean */
    winner?: boolean;
  };
  person: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /** Format: text */
    username: string;
    /** Format: text */
    avatar_url?: string;
    /** Format: text */
    website?: string;
    /**
     * Format: timestamp without time zone
     * @default CURRENT_TIMESTAMP
     */
    created_at: string;
    /**
     * Format: timestamp without time zone
     * @default CURRENT_TIMESTAMP
     */
    updated_at: string;
  };
  prediction: {
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    game_id: number;
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    team_id: number;
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `predictor.id`.<fk table='predictor' column='id'/>
     */
    predictor_id: number;
    /** Format: boolean */
    win?: boolean;
    /** Format: double precision */
    confidence?: number;
    /**
     * Format: timestamp without time zone
     * @default CURRENT_TIMESTAMP
     */
    created_at: string;
    /**
     * Format: timestamp without time zone
     * @default CURRENT_TIMESTAMP
     */
    updated_at: string;
  };
  predictor: {
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: text */
    predictor_name: string;
    /** Format: text */
    predictor_url?: string;
  };
  rank_pages: {
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    round_number?: number;
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `competition.id`.<fk table='competition' column='id'/>
     */
    competition_id?: number;
  };
  team: {
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: text */
    team_name: string;
    /** Format: text */
    abbreviation?: string;
    /** Format: jsonb */
    standing?: string;
    /**
     * Format: timestamp without time zone
     * @default CURRENT_TIMESTAMP
     */
    updated_at: string;
  };
  team_game: {
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    game_id?: number;
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    team_id?: number;
  };
  tip: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `person.id`.<fk table='person' column='id'/>
     */
    person_id: string;
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    game_id: number;
    /** Format: integer */
    team_id: number;
  };
  tournament_round: {
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    round_year: number;
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    round_number: number;
    /** Format: text */
    round_name: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description competition */
  "body.competition": definitions["competition"];
  /** Format: integer */
  "rowFilter.competition.id": string;
  /** Format: text */
  "rowFilter.competition.competition_name": string;
  /** Format: text */
  "rowFilter.competition.avatar_url": string;
  /** Format: text */
  "rowFilter.competition.website": string;
  /** Format: text */
  "rowFilter.competition.time_zone": string;
  /** Format: timestamp without time zone */
  "rowFilter.competition.created_at": string;
  /** @description competition_rankings_summary */
  "body.competition_rankings_summary": definitions["competition_rankings_summary"];
  /** Format: integer */
  "rowFilter.competition_rankings_summary.round_year": string;
  /** Format: integer */
  "rowFilter.competition_rankings_summary.round_number": string;
  /** Format: uuid */
  "rowFilter.competition_rankings_summary.person_id": string;
  /** Format: integer */
  "rowFilter.competition_rankings_summary.wins": string;
  /** Format: timestamp without time zone */
  "rowFilter.competition_rankings_summary.updated_at": string;
  /** @description competitions_persons */
  "body.competitions_persons": definitions["competitions_persons"];
  /** Format: integer */
  "rowFilter.competitions_persons.competition_id": string;
  /** Format: uuid */
  "rowFilter.competitions_persons.person_id": string;
  /** @description game */
  "body.game": definitions["game"];
  /** Format: integer */
  "rowFilter.game.id": string;
  /** Format: text */
  "rowFilter.game.venue": string;
  /** Format: timestamp without time zone */
  "rowFilter.game.scheduled": string;
  /** Format: integer */
  "rowFilter.game.round_year": string;
  /** Format: integer */
  "rowFilter.game.round_number": string;
  /** Format: timestamp without time zone */
  "rowFilter.game.created_at": string;
  /** Format: timestamp without time zone */
  "rowFilter.game.updated_at": string;
  /** Format: boolean */
  "rowFilter.game.complete": string;
  /** @description game_team */
  "body.game_team": definitions["game_team"];
  /** Format: integer */
  "rowFilter.game_team.game_id": string;
  /** Format: integer */
  "rowFilter.game_team.team_id": string;
  /** Format: boolean */
  "rowFilter.game_team.home": string;
  /** Format: integer */
  "rowFilter.game_team.goals": string;
  /** Format: integer */
  "rowFilter.game_team.behinds": string;
  /** Format: timestamp without time zone */
  "rowFilter.game_team.created_at": string;
  /** Format: timestamp without time zone */
  "rowFilter.game_team.updated_at": string;
  /** Format: boolean */
  "rowFilter.game_team.winner": string;
  /** @description person */
  "body.person": definitions["person"];
  /** Format: uuid */
  "rowFilter.person.id": string;
  /** Format: text */
  "rowFilter.person.username": string;
  /** Format: text */
  "rowFilter.person.avatar_url": string;
  /** Format: text */
  "rowFilter.person.website": string;
  /** Format: timestamp without time zone */
  "rowFilter.person.created_at": string;
  /** Format: timestamp without time zone */
  "rowFilter.person.updated_at": string;
  /** @description prediction */
  "body.prediction": definitions["prediction"];
  /** Format: integer */
  "rowFilter.prediction.game_id": string;
  /** Format: integer */
  "rowFilter.prediction.team_id": string;
  /** Format: integer */
  "rowFilter.prediction.predictor_id": string;
  /** Format: boolean */
  "rowFilter.prediction.win": string;
  /** Format: double precision */
  "rowFilter.prediction.confidence": string;
  /** Format: timestamp without time zone */
  "rowFilter.prediction.created_at": string;
  /** Format: timestamp without time zone */
  "rowFilter.prediction.updated_at": string;
  /** @description predictor */
  "body.predictor": definitions["predictor"];
  /** Format: integer */
  "rowFilter.predictor.id": string;
  /** Format: text */
  "rowFilter.predictor.predictor_name": string;
  /** Format: text */
  "rowFilter.predictor.predictor_url": string;
  /** @description rank_pages */
  "body.rank_pages": definitions["rank_pages"];
  /** Format: integer */
  "rowFilter.rank_pages.round_number": string;
  /** Format: integer */
  "rowFilter.rank_pages.competition_id": string;
  /** @description team */
  "body.team": definitions["team"];
  /** Format: integer */
  "rowFilter.team.id": string;
  /** Format: text */
  "rowFilter.team.team_name": string;
  /** Format: text */
  "rowFilter.team.abbreviation": string;
  /** Format: jsonb */
  "rowFilter.team.standing": string;
  /** Format: timestamp without time zone */
  "rowFilter.team.updated_at": string;
  /** @description team_game */
  "body.team_game": definitions["team_game"];
  /** Format: integer */
  "rowFilter.team_game.game_id": string;
  /** Format: integer */
  "rowFilter.team_game.team_id": string;
  /** @description tip */
  "body.tip": definitions["tip"];
  /** Format: uuid */
  "rowFilter.tip.person_id": string;
  /** Format: integer */
  "rowFilter.tip.game_id": string;
  /** Format: integer */
  "rowFilter.tip.team_id": string;
  /** @description tournament_round */
  "body.tournament_round": definitions["tournament_round"];
  /** Format: integer */
  "rowFilter.tournament_round.round_year": string;
  /** Format: integer */
  "rowFilter.tournament_round.round_number": string;
  /** Format: text */
  "rowFilter.tournament_round.round_name": string;
}

export interface operations {}

export interface external {}
